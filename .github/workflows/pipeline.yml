name: "CI/CD Pipeline for Next.js App with Docker Hub and SSH Deployment"

on:
  push:
    branches:
      - dev
      - stage
      - main
  pull_request:
    types:
      - closed
    branches:
      - dev
      - stage
      - main

jobs:
  succeed:
    runs-on: ubuntu-latest
    steps:
      - name: Return true and succeed
        run: |
          echo "This pipeline always succeeds."
          true

#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: "Checkout code"
#         uses: actions/checkout@v3

#       - name: "Log in to Docker Hub"
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_TOKEN }}

#       - name: "Set build environment"
#         id: set-env
#         run: |
#           if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
#             echo "image_tag=dev" >> $GITHUB_OUTPUT
#             echo "api_url=${{ secrets.API_URL_DEV }}" >> $GITHUB_OUTPUT
#           elif [[ "${GITHUB_REF}" == "refs/heads/stage" ]]; then
#             echo "image_tag=stage" >> $GITHUB_OUTPUT
#             echo "api_url=${{ secrets.API_URL_STAGE }}" >> $GITHUB_OUTPUT
#           elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
#             echo "image_tag=main" >> $GITHUB_OUTPUT
#             echo "api_url=${{ secrets.API_URL_PROD }}" >> $GITHUB_OUTPUT
#           else
#             echo "image_tag=dev" >> $GITHUB_OUTPUT
#             echo "api_url=${{ secrets.API_URL_DEV }}" >> $GITHUB_OUTPUT
#           fi

#       - name: "Build Docker image"
#         run: |
#           echo "Building Docker image..."
#           docker build \
#             --build-arg API_URL=${{ steps.set-env.outputs.api_url }} \
#             -t daggy/portal-${{ steps.set-env.outputs.image_tag }}-nextjs-app:latest .

#       - name: "Push Docker image to Docker Hub"
#         run: |
#           echo "Pushing Docker image to Docker Hub..."
#           docker push daggy/portal-${{ steps.set-env.outputs.image_tag }}-nextjs-app:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-push
#     steps:
#       - name: "Deploy to SSH server"
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           script: |
#             echo "Connecting to the SSH server..."
#             echo "Logging in to Docker Hub on the server..."
#             echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

#             if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
#               CONTAINER_NAME=portal-dev-nextjs-app
#               PORT_MAPPING="-p 9001:9001"
#               echo "Starting dev container on ${PORT_MAPPING}"
#             elif [[ "${GITHUB_REF}" == "refs/heads/stage" ]]; then
#               CONTAINER_NAME=portal-stage-nextjs-app
#               PORT_MAPPING="-p 9002:9001"
#               echo "Starting stage container on ${PORT_MAPPING}"
#             elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
#               CONTAINER_NAME=portal-main-nextjs-app
#               PORT_MAPPING="-p 9003:9001"
#               echo "Starting prod container on ${PORT_MAPPING}"
#             else
#               CONTAINER_NAME=portal-dev-nextjs-app
#               PORT_MAPPING="-p 9001:9001"
#               echo "Starting default (dev) container on ${PORT_MAPPING}"
#             fi

#             echo "Stopping existing container if any..."
#             docker stop ${CONTAINER_NAME} || true
#             docker rm ${CONTAINER_NAME} || true

#             echo "Pulling the latest image..."
#             docker pull daggy/portal-${{ steps.set-env.outputs.image_tag }}-nextjs-app:latest

#             echo "Running the new container..."
#             docker run -d --name ${CONTAINER_NAME} ${PORT_MAPPING} daggy/portal-${{ steps.set-env.outputs.image_tag }}-nextjs-app:latest

#             echo "Deployment completed successfully!"
